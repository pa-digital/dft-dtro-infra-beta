name: Deploy Integration Resources
on:
  workflow_dispatch:

env:
  TF_VAR_tf_state_bucket: dft-d-tro-terraform-dev
  TF_VAR_environment: dev #TODO: Change to test after verification
  TF_VAR_integration_prefix: int
  TF_VAR_region: ${{ vars.DEFAULT_GCP_REGION }}
  TF_VAR_project_id: ${{ vars.GCP_PROJECT_ID_DEV }}
  TF_VAR_execution_service_account: ${{ secrets.EXECUTION_SERVICE_ACCOUNT }}
  TF_VAR_wip_service_account: ${{ secrets.WIP_SERVICE_ACCOUNT }}
  TF_VAR_access_level_members: ${{ secrets.ACCESS_LEVEL_MEMBERS }}

permissions:
  contents: read
  packages: read
  actions: read

jobs:
  deploy-resources:
    name: Deploy GCP Resources to Integration
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      packages: read
      actions: read
      pull-requests: write
    defaults:
      run:
        shell: bash
        working-directory: terraform-int
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.WIP_SERVICE_ACCOUNT }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: |
          terraform init \
          -backend-config "bucket=${{env.TF_VAR_tf_state_bucket}}" \
          -backend-config "prefix=terraform/int-state"

      - name: Terraform Plan
        run: terraform plan -input=false -out terraform-plan-gcp

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false terraform-plan-gcp
