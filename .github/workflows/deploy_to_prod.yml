name: Deploy to Production

on:
  push:
    tags:
      - release-*

jobs:
  wait-for-approval:
     name: Wait for issue approval from stakeholders
     runs-on: ubuntu-latest
     steps:
      - name: Extract Release Version
        id: releasev
        run: |
          echo "Extracting release version..."
          original_string=${{github.ref}}
          substring="${original_string#refs/tags/}"
          release="${substring##*release-}"
          echo "release is ${release}"
          echo "RELEASE=${release}" >> "$GITHUB_OUTPUT"

      - name: Create GitHub issue
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.TOKEN }}
          approvers: VinP-PA,stm-john-cooper,GaTilley #TODO: Update when full list is available
          minimum-approvals: 1
          issue-title: "Deploying Infrastructure version ${{steps.releasev.outputs.RELEASE}} to Prod"
          issue-body: "Approving this issue will deploy Infrastructure release version '${{steps.releasev.outputs.RELEASE}}' to the Production environment."
          exclude-workflow-initiator-as-approver: false

  terraform-deploy-production:
    name: Terraform - Deploy to Production
    uses: ./.github/workflows/deploy_resources.yml
    needs:
      - wait-for-approval
    secrets:
      workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER_PROD }}
      wip_service_account: ${{ secrets.WIP_SERVICE_ACCOUNT_PROD }}
      execution_service_account: ${{ secrets.EXECUTION_SERVICE_ACCOUNT_PROD }}
      dft_organisation: ${{ secrets.DFT_ORGANISATION }}
      dft_organisation_id: ${{ secrets.DFT_ORGANISATION_ID }}
      access_level_members: ${{ secrets.ACCESS_LEVEL_MEMBERS }}
    with:
      gcp-project-id: ${{ vars.GCP_PROJECT_ID_PROD }}
      gcp-region: ${{ vars.DEFAULT_GCP_REGION }}
      environment: prod
      run-terraform: true
      run-apigee: false #TODO: Default value when no major endpoint or OAuth changes have been made
#      run-apigee: true
